// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Throws error if decorator function has void context: code 1`] = `
"local ____lualib = require("lualib_bundle")
local __TS__Class = ____lualib.__TS__Class
local __TS__Decorate = ____lualib.__TS__Decorate
local ____exports = {}
function ____exports.__main(self)
    local function decorator(constructor, context)
    end
    local TestClass = __TS__Class()
    TestClass.name = "TestClass"
    function TestClass.prototype.____constructor(self)
    end
    TestClass = __TS__Decorate(TestClass, TestClass, {decorator}, {kind = "class", name = "TestClass"})
end
return ____exports"
`;

exports[`Throws error if decorator function has void context: diagnostics 1`] = `"main.ts(4,9): error TSTL: Decorator function cannot have 'this: void'."`;

exports[`class field decorator warns the return value is ignored: code 1`] = `
"local ____lualib = require("lualib_bundle")
local __TS__Class = ____lualib.__TS__Class
local __TS__Decorate = ____lualib.__TS__Decorate
local ____exports = {}
function ____exports.__main(self)
    local fieldDecoratorContext
    local function fieldDecorator(self, _, context)
        fieldDecoratorContext = context
        return function(____, initialValue) return initialValue * 12 end
    end
    local TestClass = __TS__Class()
    TestClass.name = "TestClass"
    function TestClass.prototype.____constructor(self)
        self.value = 22
    end
    __TS__Decorate(TestClass, nil, {fieldDecorator}, {kind = "field", name = "value", private = false, static = false})
end
return ____exports"
`;

exports[`class field decorator warns the return value is ignored: diagnostics 1`] = `"main.ts(11,13): warning TSTL: You are using a class field decorator, note that tstl ignores returned value initializers!"`;

exports[`legacy experimentalDecorators Throws error if decorator function has void context: code 1`] = `
"local ____lualib = require("lualib_bundle")
local __TS__Class = ____lualib.__TS__Class
local __TS__DecorateLegacy = ____lualib.__TS__DecorateLegacy
local ____exports = {}
function ____exports.__main(self)
    local function decorator(constructor)
    end
    local TestClass = __TS__Class()
    TestClass.name = "TestClass"
    function TestClass.prototype.____constructor(self)
    end
    TestClass = __TS__DecorateLegacy({decorator}, TestClass)
end
return ____exports"
`;

exports[`legacy experimentalDecorators Throws error if decorator function has void context: diagnostics 1`] = `"main.ts(4,13): error TSTL: Decorator function cannot have 'this: void'."`;
